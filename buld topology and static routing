from mininet.net import Mininet
from mininet.cli import CLI 
from mininet.link import Link, TCLink, Intf
from subprocess import Popen, PIPE
from mininet.log import setLogLevel

if '__main__' == __name__:
    setLogLevel('info')
    net = Mininet(link=TCLink)
    key = "net.mptcp.mptcp_enabled"
    value = 0 
    p = Popen("sysctl -w %s=%s" % (key, value), shell=True, stdout=PIPE, stderr=PIPE)
    stdout, stderr = p.communicate()
    print ("stdout=",stdout,"stderr=",stderr)

    #add host and router 
    HostA = net.addHost("HostA")
    HostB = net.addHost("HostB")

    r1 = net.addHost("r1")
    r2 = net.addHost("r2")
    r3 = net.addHost("r3")
    r4 = net.addHost("r4")

    #setting bandwidth
    bwlink={"bw":1 }
    bwlink2={"bw":0.5 }
    
    #forward all router
    r1.cmd("echo 1 > /proc/sys/net/ipv4/ip_forward")
    r2.cmd("echo 1 > /proc/sys/net/ipv4/ip_forward")
    r3.cmd("echo 1 > /proc/sys/net/ipv4/ip_forward")
    r4.cmd("echo 1 > /proc/sys/net/ipv4/ip_forward")

    #make a link from router to host
    net.addLink(r1,HostA,intfName1 = 'r1-eth0',intfName2 = 'HostA-eth0', cls=TCLink, **bwlink) 
    net.addLink(r1,r3,intfName1 = 'r1-eth1',intfName2 = 'r3-eth1',cls=TCLink, **bwlink2) 
    net.addLink(r1,r4,intfName1 = 'r1-eth2',intfName2 = 'r4-eth1',cls=TCLink, **bwlink) 

    net.addLink(r2,HostA,intfName1 = 'r2-eth0',intfName2 = 'HostA-eth1',cls=TCLink, **bwlink) 
    net.addLink(r2,r3,intfName1 = 'r2-eth1',intfName2 = 'r3-eth2',cls=TCLink, **bwlink2) 
    net.addLink(r2,r4,intfName1 = 'r2-eth2',intfName2 = 'r4-eth2',cls=TCLink, **bwlink) 

    net.addLink(r3,HostB,intfName1 = 'r3-eth0',intfName2 = 'HostB-eth0',cls=TCLink, **bwlink) 

    net.addLink(r4,HostB,intfName1 = 'r4-eth0',intfName2 = 'HostB-eth1',cls=TCLink, **bwlink)

    #build topology
    net.build() 

    #define all hosts and routers interface 
    HostA.cmd("ifconfig HostA-eth0 0")
    HostA.cmd("ifconfig HostA-eth1 0")

    HostB.cmd("ifconfig HostB-eth0 0")
    HostB.cmd("ifconfig HostB-eth1 0")

    r1.cmd("ifconfig r1-eth0 0")
    r1.cmd("ifconfig r1-eth1 0")
    r1.cmd("ifconfig r1-eth2 0")

    r2.cmd("ifconfig r2-eth0 0")
    r2.cmd("ifconfig r2-eth1 0")
    r2.cmd("ifconfig r2-eth2 0")
 
    r3.cmd("ifconfig r3-eth0 0")
    r3.cmd("ifconfig r3-eth1 0")
    r3.cmd("ifconfig r3-eth2 0")

    r4.cmd("ifconfig r4-eth0 0")
    r4.cmd("ifconfig r4-eth1 0")
    r4.cmd("ifconfig r4-eth2 0")

    #configure ip for router and host 
    HostA.cmd("ifconfig HostA-eth0 10.41.27.1 netmask 255.255.255.0")
    HostA.cmd("ifconfig HostA-eth1 10.41.28.1 netmask 255.255.255.0")

    HostB.cmd("ifconfig HostB-eth0 10.41.29.1 netmask 255.255.255.0")
    HostB.cmd("ifconfig HostB-eth1 10.41.30.1 netmask 255.255.255.0")

    r1.cmd("ifconfig r1-eth0 10.41.27.2 netmask 255.255.255.0")
    r1.cmd("ifconfig r1-eth1 10.41.31.1 netmask 255.255.255.252")
    r1.cmd("ifconfig r1-eth2 10.41.31.5 netmask 255.255.255.252")

    r2.cmd("ifconfig r2-eth0 10.41.28.2 netmask 255.255.255.0")
    r2.cmd("ifconfig r2-eth1 10.41.31.9 netmask 255.255.255.252")
    r2.cmd("ifconfig r2-eth2 10.41.31.13 netmask 255.255.255.252")

    r3.cmd("ifconfig r3-eth0 10.41.29.2 netmask 255.255.255.0")
    r3.cmd("ifconfig r3-eth1 10.41.31.2 netmask 255.255.255.252")
    r3.cmd("ifconfig r3-eth2 10.41.31.10 netmask 255.255.255.252")

    r4.cmd("ifconfig r4-eth0 10.41.30.2 netmask 255.255.255.0")
    r4.cmd("ifconfig r4-eth1 10.41.31.6 netmask 255.255.255.252")
    r4.cmd("ifconfig r4-eth2 10.41.31.14 netmask 255.255.255.252")

    #host routing 
    HostA.cmd("ip rule add from 10.41.27.1 table 1")
    HostA.cmd("ip rule add from 10.41.28.1 table 2")
    HostA.cmd("ip route add 10.41.27.0/24 dev HostA-eth0 scope link table 1")
    HostA.cmd("ip route default via 10.41.27.2 dev HostA-eth0 table 1")
    HostA.cmd("ip route add 10.41.28.0/24 dev HostA-eth1 scope link table 2")
    HostA.cmd("ip route default via 10.41.28.2 dev HostA-eth1 table 2")
    HostA.cmd("ip route add default scope global nexthop via 10.41.27.2 dev HostA-eth0")
    HostA.cmd("ip route add default scope global nexthop via 10.41.28.2 dev HostA-eth1")

    HostB.cmd("ip rule add from 10.41.29.1 table 3")
    HostB.cmd("ip rule add from 10.41.30.1 table 4")
    HostB.cmd("ip route add 10.41.29.0/24 dev HostB-eth0 scope link table 3")
    HostB.cmd("ip route default via 10.41.29.2 dev HostB-eth0 table 3")
    HostB.cmd("ip route add 10.41.30.0/24 dev HostB-eth1 scope link table 4")
    HostB.cmd("ip route default via 10.41.30.2 dev HostB-eth1 table 4")
    HostB.cmd("ip route add default scope global nexthop via 10.41.29.2 dev HostB-eth0")
    HostB.cmd("ip route add default scope global nexthop via 10.41.30.2 dev HostB-eth1")

    #static routing for routers
    r1.cmd("route add -net 10.41.29.0/24 gw 10.41.31.2")
    r1.cmd("route add -net 10.41.30.0/24 gw 10.41.31.6")
    r1.cmd("route add -net 10.41.31.8/30 gw 10.41.31.2")
    r1.cmd("route add -net 10.41.31.12/30 gw 10.41.31.6")
    r1.cmd("route add -net 10.41.28.0/24 gw 10.41.31.6")  
	
    r2.cmd("route add -net 10.41.27.0/24 gw 10.41.31.14")
    r2.cmd("route add -net 10.41.31.0/30 gw 10.41.31.10")
    r2.cmd("route add -net 10.41.29.0/24 gw 10.41.31.10")
    r2.cmd("route add -net 10.41.30.0/24 gw 10.41.31.14")
    r2.cmd("route add -net 10.41.31.4/30 gw 10.41.31.14")
    
    r3.cmd("route add -net 10.41.27.0/24 gw 10.41.31.1")
    r3.cmd("route add -net 10.41.28.0/24 gw 10.41.31.9")
    r3.cmd("route add -net 10.41.31.12/30 gw 10.41.31.9")
    r3.cmd("route add -net 10.41.31.4/30 gw 10.41.31.1")
    r3.cmd("route add -net 10.41.30.0/24 gw 10.41.31.1")
    
    
    r4.cmd("route add -net 10.41.27.0/24 gw 10.41.31.5")
    r4.cmd("route add -net 10.41.28.0/24 gw 10.41.31.13")
    r4.cmd("route add -net 10.41.31.8/30 gw 10.41.31.13")
    r4.cmd("route add -net 10.41.31.0/30 gw 10.41.31.5")
    r4.cmd("route add -net 10.41.29.0/24 gw 10.41.31.5")
 
    CLI(net)
    net.stop()
    


